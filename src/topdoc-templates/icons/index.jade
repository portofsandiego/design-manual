//- 
//- Filters out components without markup examples
//- 

- var componentsWithMarkup = []

//- Loop through all Topdoc comments in the CSS file
each component in document.components

  //- Filter out any component whose family does not match the one that was
  //- set in the Grunt task.
  if(component.family == templateData.family)

    //- Filter out components without patterns
    if (component.patterns)

      //- Loop through the patterns. 
      each pattern in component.patterns

        - var startLength = componentsWithMarkup.length

        if (pattern.markup)
          //- If at least one pattern contains markup then add this component
          //- to the componentsWithMarkup array so we can loop through it later.
          - componentsWithMarkup.push(component)

        //- Compare the length of componentsWithMarkup to what it was before
        //- the if statement. If this component was added to the array then
        //- break the loop.
        if (componentsWithMarkup.length > startLength)
        - return

//- 

//- After creating the list of components containing markup examples
//- loop through them again so that we can render its patterns.
each component in componentsWithMarkup
  
  = '\n'
  h3
    = component.name.trim()
  = '\n'

  each pattern in component.patterns

    //- Only render a pattern containing a name and markup.
    if (pattern.name && pattern.markup)
      div.minicon-assets-div
        h6
          = pattern.name.trim()
        != '\n' + pattern.markup.trim()
      = '\n'

